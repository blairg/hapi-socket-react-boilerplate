language: node_js

node_js:
  - "8"

# sudo: required

# services:
#   - docker

env:
  global:
    - BASE_DOCKER_IMAGE=node:8.9.1-alpine
    - DOCKER_REPOSITORY=registry.heroku.com
    - DOCKER_DEPLOY_PATH=${DOCKER_REPOSITORY}/hapi-boilerplate-docker/web

# before_install:
#   - rm -rf node_modules/
#   - rm -rf /usr/local/lib/node_modules/
#   - npm install eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react babel-cli -g
#   - npm install eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react babel-cli --save-dev
#   - npm install eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react babel-cli
#   - npm install webpack babel-istanbul --save-dev
#   - npm install webpack babel-istanbul
#   - npm install webpack babel-istanbul -g

# before_install:
#   - npm i -g npm@latest

# install: npm i

# cache:
#   directories:
    # - "node_modules"
    # - "/usr/local/lib/node_module

cache: false

before_script:
  - rm -rf node_modules 
  - npm install -g mocha npm@latest babel-core babel-loader

script: 
  - npm install
  - ls node_modules -lah
  - npm test

# script: 
  # - npm i mocha babel-cli --save-dev
  # - npm run test:coverage

# script: 
#   - rm -rf node_modules
#   - rm -rf /usr/local/lib/node_modules
#   - npm cache clean --force
#   - npm install eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react babel-cli -g
#   - npm install eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react babel-cli --save-dev
#   - npm install eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react babel-cli
#   - npm install webpack babel-istanbul nyc cross-env --save-dev
#   - npm install webpack babel-istanbul nyc cross-env
#   - npm install webpack babel-istanbul nyc cross-env -g
#   - npm install
#   - ls -la
#   - npm run lint
#   - npm run test:coverage
#   - npm run build:prod
#   # - if [ "$TRAVIS_BRANCH" = "master" ]; then docker build --cache-from ${BASE_DOCKER_IMAGE} -t ${DOCKER_DEPLOY_PATH} . && docker login --username=_ --password=${HEROKU_TOKEN} ${DOCKER_REPOSITORY} && docker push ${DOCKER_DEPLOY_PATH}; fi
#   # - docker build --cache-from ${BASE_DOCKER_IMAGE} -t ${DOCKER_DEPLOY_PATH} . && docker login --username=_ --password=${HEROKU_TOKEN} ${DOCKER_REPOSITORY} && docker push ${DOCKER_DEPLOY_PATH}

# after_success:
#   - cat ./coverage/lcov.info | coveralls