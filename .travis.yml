language: node_js

node_js:
  - "8"

sudo: required

services:
  - docker

env:
  global:
    - BASE_DOCKER_IMAGE=node:8.9.1-alpine
    - DOCKER_REPOSITORY=registry.heroku.com
    - DOCKER_DEPLOY_PATH=${DOCKER_REPOSITORY}/hapi-boilerplate-docker/web

before_install:
  - rm -rf node_modules/
  - rm -rf /usr/local/lib/node_modules/
  - npm install eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react babel-cli -g
  - npm install webpack babel-istanbul
  - npm install webpack babel-istanbul -g

install: npm install --verbose

# cache:
#   directories:
    # - "node_modules"
    # - "/usr/local/lib/node_modules"

script: 
  # - rm -rf node_modules/
  # - rm -rf /usr/local/lib/node_modules/
  # - npm install
  # - npm install eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react webpack babel-cli babel-istanbul -g
  # - npm install webpack babel-istanbul
  - ls node_modules/.bin -la
  - npm run lint
  - npm run test:coverage
  - npm run build:prod
  # - if [ "$TRAVIS_BRANCH" = "master" ]; then docker build --cache-from ${BASE_DOCKER_IMAGE} -t ${DOCKER_DEPLOY_PATH} . && docker login --username=_ --password=${HEROKU_TOKEN} ${DOCKER_REPOSITORY} && docker push ${DOCKER_DEPLOY_PATH}; fi
  - docker build --cache-from ${BASE_DOCKER_IMAGE} -t ${DOCKER_DEPLOY_PATH} . && docker login --username=_ --password=${HEROKU_TOKEN} ${DOCKER_REPOSITORY} && docker push ${DOCKER_DEPLOY_PATH}

after_success:
  - cat ./coverage/lcov.info | coveralls